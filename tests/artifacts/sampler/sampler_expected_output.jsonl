{"added":"2023-09-08T23:13:54.355Z","created":"2023-09-08T23:13:54.355Z","id":"577152","metadata":{"extension":"c","max_stars_count":"0.0","max_stars_repo_name":"ParaschivAlex/FMI-Thangs","max_stars_repo_path":"SO/Laboratorul_4/forkls.c","provenance":"train-00016-of-00053.jsonl.gz:1"},"source":"starcoder","text":"<reponame>ParaschivAlex/FMI-Thangs\n#include <stdio.h>\n#include <unistd.h>\n#include <sys/wait.h>\n#include <errno.h>\n\nint main()\n{\n\tpid_t child = fork();\n\tif (child == -1)\n\t\treturn errno;\n\tif(child != 0)\n\t\t{\n\t\t\tprintf(\"My PID = %d, Child = %d\\n\", getpid(), child);\n\t\t\twait(NULL);///parintele isi suspenda activitatea pt a astepta terminarea executiei fiului; daca sunt mai multi fii, wait asteapta doar unul\n\t\t\tprintf(\"Child \\t%d \\t\\n\", child);\n\t\t}\n\telse\n\t\t{\n\t\t\tchar *argv[] = {\"ls\", NULL};\n\t\t\tchar *envp[] = {NULL};\n\t\t\texecve (\"/bin/ls\", argv, envp);///executa un alt program existent si suprascrie complet procesul apelant cu un nou proces conform programului gasit la calea indicata\n\t\t}\n\r\n\treturn 0;\n}\n"}
{"added":"2023-09-08T23:13:54.355Z","created":"2023-09-08T23:13:54.355Z","id":"577153","metadata":{"extension":"c","max_stars_count":"1.0","max_stars_repo_name":"BeckResearchLab/odin","max_stars_repo_path":"software/NECESSARY LIBRARIES/libraries/WiFi/utility/server_drv.h","provenance":"train-00016-of-00053.jsonl.gz:2"},"source":"starcoder","text":"<reponame>BeckResearchLab/odin<filename>software/NECESSARY LIBRARIES/libraries/WiFi/utility/server_drv.h\n/*\n  server_drv.h - Library for Arduino Wifi shield.\n  Copyright (c) 2011-2014 Arduino.  All right reserved.\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General Public\n  License along with this library; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n*/\n\n#ifndef Server_Drv_h\n#define Server_Drv_h\n\n#include <inttypes.h>\n#include \"wifi_spi.h\"\n\ntypedef enum eProtMode {TCP_MODE, UDP_MODE}tProtMode;\n\nclass ServerDrv\n{\npublic:\n\n    // Start server TCP on port specified\n    static void startServer(uint16_t port, uint8_t sock, uint8_t protMode=TCP_MODE);\n\n    static void startClient(uint32_t ipAddress, uint16_t port, uint8_t sock, uint8_t protMode=TCP_MODE);\n\n    static void stopClient(uint8_t sock);\n                                                                                  \n    static uint8_t getServerState(uint8_t sock);\n\n    static uint8_t getClientState(uint8_t sock);\n\n    static bool getData(uint8_t sock, uint8_t *data, uint8_t peek = 0);\n\n    static bool getDataBuf(uint8_t sock, uint8_t *data, uint16_t *len);\n\n    static bool insertDataBuf(uint8_t sock, const uint8_t *_data, uint16_t _dataLen);\n\n    static bool sendData(uint8_t sock, const uint8_t *data, uint16_t len);\n\n    static bool sendUdpData(uint8_t sock);\n\n    static uint16_t availData(uint8_t sock);\n\n    static uint8_t checkDataSent(uint8_t sock);\n};\n\nextern ServerDrv serverDrv;\n\n#endif\n"}
{"added":"2023-09-08T23:13:54.410Z","created":"2023-09-08T23:13:54.410Z","id":"28423525","metadata":{"extension":"github-issues-filtered-structured","provenance":"train-00048-of-00059.jsonl.gz:1"},"source":"starcoder","text":"<issue_start><issue_comment>Title: Could issue #4407 receive a status update for documentation purposes?\nusername_0: Perhaps I'm blind, but I've been searching around a lot and I couldn't find out how #4407 has been resolved eventually. Since such issues serve as documentation themselves (it's the best resource Google has returned for me), it would nice to post a short status update / link to a solution.<issue_closed>\n<issue_comment>username_1: Because of how v4 and beyond has been architected, this isn't really possible by the library anymore. Nor is it how much of the React ecosystem has moved (see SWR). So, plans changed and there is no plan to make that demo anymore.\n<issue_comment>username_0: :+1: thanks for the clarification! I'll have to think about the implications...\r\n\r\nWould it be possible to post that short info on the issue? I spend 2 hours re-reading the issue comments, reading the docs, git grepping the repo, reading source code, cross checking with dozen of (outdated) SO questions, because the way the issue reads it clearly sounded like there must be a solution by now and I'm missing it. Handling async route switching seems to be an obvious problem, so I'm most likely not the last person confused by the lack of documentation / status update. Unfortunately due to the way the locking works, it doesn't even link your clarifying post there :disappointed: ."}
